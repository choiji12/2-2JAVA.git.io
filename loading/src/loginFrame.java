
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rnals
 */
public class loginFrame extends javax.swing.JFrame {
    DB_MAN DBM =new DB_MAN();
    String strSQL="Select * From user";
    ID id = new ID();
    int loginFailCnt = 0;
    int againFail = 0;
    
    public String Random(){
        String[] randomNumber = new String[6];
        ArrayList<String> num = new ArrayList<String>();
        char[] eng = new char[26];
        
        String[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
        for(int i = 1 ; i <= 9 ; i++) {
            num.add(Integer.toString(i));
        }
        for(int i = 0; i< 26; i++){
            eng[i] = ((char)(i + 97));
        }
        List<String> alphabetList = Arrays.asList(alphabet);
        Collections.shuffle(num);
        Collections.shuffle(alphabetList);
        for(int i = 0 ; i < 3 ; i++) {
            randomNumber[i] = num.get(i);
            randomNumber[i+3] = alphabetList.get(i);
        }
        List<String> listRandomNumber = Arrays.asList(randomNumber);
        Collections.shuffle(listRandomNumber);
        
        
        String strRandomNumber = listRandomNumber.toString().replaceAll("[^0-9^A-Z ]","");
        return strRandomNumber;
    }
    
    /**
     * Creates new form MainFrame
     */
    public loginFrame() {
        initComponents();
        lblChapcha.setVisible(false);
        txtChapchaInput.setVisible(false);
        btnRefresh.setVisible(false);
        loginFrame.super.setSize(700, 500);
        loginFrame.super.setLocation(500, 120);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnloading = new javax.swing.JPanel();
        txtUserID = new javax.swing.JTextField();
        txtUserPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblChapcha = new javax.swing.JLabel();
        txtChapchaInput = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        lblphoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnloading.setBackground(new java.awt.Color(255, 255, 255));
        pnloading.setPreferredSize(new java.awt.Dimension(700, 500));

        txtUserID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        txtUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIDActionPerformed(evt);
            }
        });

        txtUserPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        txtUserPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserPasswordActionPerformed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("맑은 고딕", 1, 12)); // NOI18N
        btnLogin.setText("로그인");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogin(evt);
            }
        });

        btnSignUp.setFont(new java.awt.Font("맑은 고딕", 1, 12)); // NOI18N
        btnSignUp.setText("회원가입");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignup(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("휴먼모음T", 1, 36)); // NOI18N
        lblTitle.setText("loading");

        lblChapcha.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N

        txtChapchaInput.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        txtChapchaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChapchaInputActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("맑은 고딕", 1, 12)); // NOI18N
        btnRefresh.setText("새로고침");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        lblphoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/KakaoTalk_20221213_225324018.png"))); // NOI18N

        javax.swing.GroupLayout pnloadingLayout = new javax.swing.GroupLayout(pnloading);
        pnloading.setLayout(pnloadingLayout);
        pnloadingLayout.setHorizontalGroup(
            pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnloadingLayout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSignUp)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnloadingLayout.createSequentialGroup()
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnloadingLayout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(lblTitle))
                    .addGroup(pnloadingLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnloadingLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChapcha, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnloadingLayout.createSequentialGroup()
                        .addComponent(txtChapchaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)))
                .addGap(63, 63, 63))
        );
        pnloadingLayout.setVerticalGroup(
            pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnloadingLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSignUp))
                .addGap(25, 25, 25)
                .addComponent(lblChapcha, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnloadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChapchaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnloading, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnloading, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        String strRandomNumber = Random();
        lblChapcha.setText(strRandomNumber);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtChapchaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChapchaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChapchaInputActionPerformed

    private void btnSignup(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignup
        // TODO add your handling code here:
        SignupFrame sf = new SignupFrame();
        sf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSignup

    private void btnLogin(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogin
        // TODO add your handling code here:
        if (txtUserID.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "아이디를 입력하세요.", "ERROR_MESSAGE",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (txtUserPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "비밀번호를 입력하세요.", "ERROR_MESSAGE",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String useridd = null;
        String userpwdd = null;

        strSQL = "SELECT userid,CONVERT(AES_DECRYPT(UNHEX(userpwd), 'a') USING UTF8) AS 'userpwd' "
                + "from Point.user where userid ='" + txtUserID.getText() +"'" ;
        
        try{
            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strSQL);
            while(DBM.DB_rs.next()){
                ID.useridd =(DBM.DB_rs.getString("userid"));
                useridd = (DBM.DB_rs.getString("userid"));
                userpwdd = (DBM.DB_rs.getString("userpwd"));}

            if (loginFailCnt > 0){
                againFail ++;
                lblChapcha.setVisible(true);
                txtChapchaInput.setVisible(true);
                btnRefresh.setVisible(true);
                if (loginFailCnt > 1){
                    String random = lblChapcha.getText();
                    String input = txtChapchaInput.getText().toUpperCase();
                    String random2 = random.replace(" ","");
                    if (!(input.equals(random) || input.equals(random2)) ){
                        JOptionPane.showMessageDialog(null, "확인 문자를 정확하게 기입해주세요!", 
                                "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
                        String strRandomNumber = Random();
                        lblChapcha.setText(strRandomNumber);
                        txtChapchaInput.setText("");
                        return;
                    }
                }
            }

            DBM.DB_rs.close();
            DBM.dbClose();
        }

        catch(Exception e){
            System.out.println("SQLException:" + e.getMessage());
        }

        try{
            if(txtUserID.getText().equals(useridd)){

            }else{
                JOptionPane.showMessageDialog(null, "없는 아이디입니다.", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
                loginFailCnt++;
                if (againFail >0){
                    String strRandomNumber = Random();
                    lblChapcha.setText(strRandomNumber);
                }
                txtChapchaInput.setText("");
                return;
            }
            if(txtUserPassword.getText().equals(userpwdd)){}
            else{
                JOptionPane.showMessageDialog(null, "비밀번호가 틀립니다.", "ERROR_MESSAGE", JOptionPane.ERROR_MESSAGE);
                loginFailCnt++;
                if (againFail >0){
                    String strRandomNumber = Random();
                    lblChapcha.setText(strRandomNumber);
                }
                txtChapchaInput.setText("");
                return;
            }
            mainFrame tf = new mainFrame();
            tf.setVisible(true);
            this.dispose();

        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLogin

    private void txtUserPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserPasswordActionPerformed

    private void txtUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JLabel lblChapcha;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JPanel pnloading;
    private javax.swing.JTextField txtChapchaInput;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JPasswordField txtUserPassword;
    // End of variables declaration//GEN-END:variables
}
